//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ApplicationEntities_Applications", "Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Application1), "ApplicationEntities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ApplicationEntity), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ApplicationEntities_Entities", "Entities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Entity), "ApplicationEntities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ApplicationEntity), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CalculatedProperties_EntityProperties", "EntityProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.EntityProperty), "CalculatedProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.CalculatedProperty), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CalculatedProperties_Functions", "Functions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.c_Function), "CalculatedProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CalculatedProperty), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EntityParameters_EntityProperties", "EntityProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.EntityProperty), "EntityParameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EntityParameter), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EntityParameters_Parameters", "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Parameter), "EntityParameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EntityParameter), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EntityProperties_DataTypes", "DataTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.DataType), "EntityProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EntityProperty), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EntityProperties_Entities", "Entities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Entity), "EntityProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EntityProperty), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EntityRelationships_Entities", "Entities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Entity), "EntityRelationships", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EntityRelationship), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EntityRelationships_Entities1", "Entities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Entity), "EntityRelationships", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EntityRelationship), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_FunctionOperations_Functions", "Functions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.c_Function), "FunctionOperations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.FunctionOperation), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_FunctionOperations_Operators", "Operators", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.c_Operator), "FunctionOperations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.FunctionOperation), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_FunctionOperations_Parameters", "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Parameter), "FunctionOperations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.FunctionOperation), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_FunctionParameters_Functions", "Functions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.c_Function), "FunctionParameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.FunctionParameter), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_FunctionParameters_Parameters", "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Parameter), "FunctionParameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.FunctionParameter), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Parameters_DataTypes", "DataTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.DataType), "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.Parameter), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RevolutionAppDBData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RevolutionAppDBData object using the connection string found in the 'RevolutionAppDBData' section of the application configuration file.
        /// </summary>
        public RevolutionAppDBData() : base("name=RevolutionAppDBData", "RevolutionAppDBData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RevolutionAppDBData object.
        /// </summary>
        public RevolutionAppDBData(string connectionString) : base(connectionString, "RevolutionAppDBData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RevolutionAppDBData object.
        /// </summary>
        public RevolutionAppDBData(EntityConnection connection) : base(connection, "RevolutionAppDBData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationEntity> ApplicationEntities
        {
            get
            {
                if ((_ApplicationEntities == null))
                {
                    _ApplicationEntities = base.CreateObjectSet<ApplicationEntity>("ApplicationEntities");
                }
                return _ApplicationEntities;
            }
        }
        private ObjectSet<ApplicationEntity> _ApplicationEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application1> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application1>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application1> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalculatedProperty> CalculatedProperties
        {
            get
            {
                if ((_CalculatedProperties == null))
                {
                    _CalculatedProperties = base.CreateObjectSet<CalculatedProperty>("CalculatedProperties");
                }
                return _CalculatedProperties;
            }
        }
        private ObjectSet<CalculatedProperty> _CalculatedProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataType> DataTypes
        {
            get
            {
                if ((_DataTypes == null))
                {
                    _DataTypes = base.CreateObjectSet<DataType>("DataTypes");
                }
                return _DataTypes;
            }
        }
        private ObjectSet<DataType> _DataTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Entity> Entities
        {
            get
            {
                if ((_Entities == null))
                {
                    _Entities = base.CreateObjectSet<Entity>("Entities");
                }
                return _Entities;
            }
        }
        private ObjectSet<Entity> _Entities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntityParameter> EntityParameters
        {
            get
            {
                if ((_EntityParameters == null))
                {
                    _EntityParameters = base.CreateObjectSet<EntityParameter>("EntityParameters");
                }
                return _EntityParameters;
            }
        }
        private ObjectSet<EntityParameter> _EntityParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntityProperty> EntityProperties
        {
            get
            {
                if ((_EntityProperties == null))
                {
                    _EntityProperties = base.CreateObjectSet<EntityProperty>("EntityProperties");
                }
                return _EntityProperties;
            }
        }
        private ObjectSet<EntityProperty> _EntityProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntityRelationship> EntityRelationships
        {
            get
            {
                if ((_EntityRelationships == null))
                {
                    _EntityRelationships = base.CreateObjectSet<EntityRelationship>("EntityRelationships");
                }
                return _EntityRelationships;
            }
        }
        private ObjectSet<EntityRelationship> _EntityRelationships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FunctionOperation> FunctionOperations
        {
            get
            {
                if ((_FunctionOperations == null))
                {
                    _FunctionOperations = base.CreateObjectSet<FunctionOperation>("FunctionOperations");
                }
                return _FunctionOperations;
            }
        }
        private ObjectSet<FunctionOperation> _FunctionOperations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FunctionParameter> FunctionParameters
        {
            get
            {
                if ((_FunctionParameters == null))
                {
                    _FunctionParameters = base.CreateObjectSet<FunctionParameter>("FunctionParameters");
                }
                return _FunctionParameters;
            }
        }
        private ObjectSet<FunctionParameter> _FunctionParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<c_Function> Functions
        {
            get
            {
                if ((_Functions == null))
                {
                    _Functions = base.CreateObjectSet<c_Function>("Functions");
                }
                return _Functions;
            }
        }
        private ObjectSet<c_Function> _Functions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FunctionSet> FunctionSets
        {
            get
            {
                if ((_FunctionSets == null))
                {
                    _FunctionSets = base.CreateObjectSet<FunctionSet>("FunctionSets");
                }
                return _FunctionSets;
            }
        }
        private ObjectSet<FunctionSet> _FunctionSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModelType> ModelTypes
        {
            get
            {
                if ((_ModelTypes == null))
                {
                    _ModelTypes = base.CreateObjectSet<ModelType>("ModelTypes");
                }
                return _ModelTypes;
            }
        }
        private ObjectSet<ModelType> _ModelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<c_Operator> Operators
        {
            get
            {
                if ((_Operators == null))
                {
                    _Operators = base.CreateObjectSet<c_Operator>("Operators");
                }
                return _Operators;
            }
        }
        private ObjectSet<c_Operator> _Operators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameter> _Parameters;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationEntities(ApplicationEntity applicationEntity)
        {
            base.AddObject("ApplicationEntities", applicationEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application1 application1)
        {
            base.AddObject("Applications", application1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalculatedProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalculatedProperties(CalculatedProperty calculatedProperty)
        {
            base.AddObject("CalculatedProperties", calculatedProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataTypes(DataType dataType)
        {
            base.AddObject("DataTypes", dataType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Entities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntities(Entity entity)
        {
            base.AddObject("Entities", entity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntityParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntityParameters(EntityParameter entityParameter)
        {
            base.AddObject("EntityParameters", entityParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntityProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntityProperties(EntityProperty entityProperty)
        {
            base.AddObject("EntityProperties", entityProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntityRelationships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntityRelationships(EntityRelationship entityRelationship)
        {
            base.AddObject("EntityRelationships", entityRelationship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FunctionOperations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunctionOperations(FunctionOperation functionOperation)
        {
            base.AddObject("FunctionOperations", functionOperation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FunctionParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunctionParameters(FunctionParameter functionParameter)
        {
            base.AddObject("FunctionParameters", functionParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Functions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunctions(c_Function c_Function)
        {
            base.AddObject("Functions", c_Function);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FunctionSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunctionSets(FunctionSet functionSet)
        {
            base.AddObject("FunctionSets", functionSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModelTypes(ModelType modelType)
        {
            base.AddObject("ModelTypes", modelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Operators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperators(c_Operator c_Operator)
        {
            base.AddObject("Operators", c_Operator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameter parameter)
        {
            base.AddObject("Parameters", parameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Application1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application1 object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="applicationFolder">Initial value of the ApplicationFolder property.</param>
        public static Application1 CreateApplication1(global::System.Int32 id, global::System.String applicationName, global::System.String applicationFolder)
        {
            Application1 application1 = new Application1();
            application1.Id = id;
            application1.ApplicationName = applicationName;
            application1.ApplicationFolder = applicationFolder;
            return application1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = value;
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationFolder
        {
            get
            {
                return _ApplicationFolder;
            }
            set
            {
                OnApplicationFolderChanging(value);
                ReportPropertyChanging("ApplicationFolder");
                _ApplicationFolder = value;
                ReportPropertyChanged("ApplicationFolder");
                OnApplicationFolderChanged();
            }
        }
        private global::System.String _ApplicationFolder;
        partial void OnApplicationFolderChanging(global::System.String value);
        partial void OnApplicationFolderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ApplicationEntities_Applications", "ApplicationEntities")]
        public EntityCollection<ApplicationEntity> ApplicationEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntity>("LightSwitchApplication.FK_ApplicationEntities_Applications", "ApplicationEntities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntity>("LightSwitchApplication.FK_ApplicationEntities_Applications", "ApplicationEntities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ApplicationEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationEntity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="entityId">Initial value of the EntityId property.</param>
        public static ApplicationEntity CreateApplicationEntity(global::System.Int32 id, global::System.Int32 applicationId, global::System.Int32 entityId)
        {
            ApplicationEntity applicationEntity = new ApplicationEntity();
            applicationEntity.Id = id;
            applicationEntity.ApplicationId = applicationId;
            applicationEntity.EntityId = entityId;
            return applicationEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = value;
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityId
        {
            get
            {
                return _EntityId;
            }
            set
            {
                OnEntityIdChanging(value);
                ReportPropertyChanging("EntityId");
                _EntityId = value;
                ReportPropertyChanged("EntityId");
                OnEntityIdChanged();
            }
        }
        private global::System.Int32 _EntityId;
        partial void OnEntityIdChanging(global::System.Int32 value);
        partial void OnEntityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ApplicationEntities_Applications", "Applications")]
        public Application1 Application1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application1>("LightSwitchApplication.FK_ApplicationEntities_Applications", "Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application1>("LightSwitchApplication.FK_ApplicationEntities_Applications", "Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application1> Application1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application1>("LightSwitchApplication.FK_ApplicationEntities_Applications", "Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application1>("LightSwitchApplication.FK_ApplicationEntities_Applications", "Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ApplicationEntities_Entities", "Entities")]
        public Entity Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_ApplicationEntities_Entities", "Entities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_ApplicationEntities_Entities", "Entities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_ApplicationEntities_Entities", "Entities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("LightSwitchApplication.FK_ApplicationEntities_Entities", "Entities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="c_Function")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class c_Function : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new c_Function object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static c_Function Createc_Function(global::System.Int32 id, global::System.String name)
        {
            c_Function c_Function = new c_Function();
            c_Function.Id = id;
            c_Function.Name = name;
            return c_Function;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CalculatedProperties_Functions", "CalculatedProperties")]
        public EntityCollection<CalculatedProperty> CalculatedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalculatedProperty>("LightSwitchApplication.FK_CalculatedProperties_Functions", "CalculatedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalculatedProperty>("LightSwitchApplication.FK_CalculatedProperties_Functions", "CalculatedProperties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionOperations_Functions", "FunctionOperations")]
        public EntityCollection<FunctionOperation> FunctionOperations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FunctionOperation>("LightSwitchApplication.FK_FunctionOperations_Functions", "FunctionOperations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FunctionOperation>("LightSwitchApplication.FK_FunctionOperations_Functions", "FunctionOperations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionParameters_Functions", "FunctionParameters")]
        public EntityCollection<FunctionParameter> FunctionParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FunctionParameter>("LightSwitchApplication.FK_FunctionParameters_Functions", "FunctionParameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FunctionParameter>("LightSwitchApplication.FK_FunctionParameters_Functions", "FunctionParameters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="c_Operator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class c_Operator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new c_Operator object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static c_Operator Createc_Operator(global::System.Int32 id, global::System.String name)
        {
            c_Operator c_Operator = new c_Operator();
            c_Operator.Id = id;
            c_Operator.Name = name;
            return c_Operator;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionOperations_Operators", "FunctionOperations")]
        public EntityCollection<FunctionOperation> FunctionOperations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FunctionOperation>("LightSwitchApplication.FK_FunctionOperations_Operators", "FunctionOperations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FunctionOperation>("LightSwitchApplication.FK_FunctionOperations_Operators", "FunctionOperations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CalculatedProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalculatedProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalculatedProperty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="functionId">Initial value of the FunctionId property.</param>
        public static CalculatedProperty CreateCalculatedProperty(global::System.Int32 id, global::System.Int32 functionId)
        {
            CalculatedProperty calculatedProperty = new CalculatedProperty();
            calculatedProperty.Id = id;
            calculatedProperty.FunctionId = functionId;
            return calculatedProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FunctionId
        {
            get
            {
                return _FunctionId;
            }
            set
            {
                OnFunctionIdChanging(value);
                ReportPropertyChanging("FunctionId");
                _FunctionId = value;
                ReportPropertyChanged("FunctionId");
                OnFunctionIdChanged();
            }
        }
        private global::System.Int32 _FunctionId;
        partial void OnFunctionIdChanging(global::System.Int32 value);
        partial void OnFunctionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CalculatedProperties_EntityProperties", "EntityProperties")]
        public EntityProperty EntityProperty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityProperty>("LightSwitchApplication.FK_CalculatedProperties_EntityProperties", "EntityProperties").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityProperty>("LightSwitchApplication.FK_CalculatedProperties_EntityProperties", "EntityProperties").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntityProperty> EntityPropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityProperty>("LightSwitchApplication.FK_CalculatedProperties_EntityProperties", "EntityProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntityProperty>("LightSwitchApplication.FK_CalculatedProperties_EntityProperties", "EntityProperties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CalculatedProperties_Functions", "Functions")]
        public c_Function c_Function
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_CalculatedProperties_Functions", "Functions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_CalculatedProperties_Functions", "Functions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<c_Function> c_FunctionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_CalculatedProperties_Functions", "Functions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<c_Function>("LightSwitchApplication.FK_CalculatedProperties_Functions", "Functions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="DataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DataType CreateDataType(global::System.Int32 id, global::System.String name)
        {
            DataType dataType = new DataType();
            dataType.Id = id;
            dataType.Name = name;
            return dataType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityProperties_DataTypes", "EntityProperties")]
        public EntityCollection<EntityProperty> EntityProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityProperty>("LightSwitchApplication.FK_EntityProperties_DataTypes", "EntityProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityProperty>("LightSwitchApplication.FK_EntityProperties_DataTypes", "EntityProperties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Parameters_DataTypes", "Parameters")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("LightSwitchApplication.FK_Parameters_DataTypes", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("LightSwitchApplication.FK_Parameters_DataTypes", "Parameters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Entity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Entity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Entity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="entityName">Initial value of the EntityName property.</param>
        public static Entity CreateEntity(global::System.Int32 id, global::System.String entityName)
        {
            Entity entity = new Entity();
            entity.Id = id;
            entity.EntityName = entityName;
            return entity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EntityName
        {
            get
            {
                return _EntityName;
            }
            set
            {
                OnEntityNameChanging(value);
                ReportPropertyChanging("EntityName");
                _EntityName = value;
                ReportPropertyChanged("EntityName");
                OnEntityNameChanged();
            }
        }
        private global::System.String _EntityName;
        partial void OnEntityNameChanging(global::System.String value);
        partial void OnEntityNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ApplicationEntities_Entities", "ApplicationEntities")]
        public EntityCollection<ApplicationEntity> ApplicationEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntity>("LightSwitchApplication.FK_ApplicationEntities_Entities", "ApplicationEntities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntity>("LightSwitchApplication.FK_ApplicationEntities_Entities", "ApplicationEntities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityProperties_Entities", "EntityProperties")]
        public EntityCollection<EntityProperty> EntityProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityProperty>("LightSwitchApplication.FK_EntityProperties_Entities", "EntityProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityProperty>("LightSwitchApplication.FK_EntityProperties_Entities", "EntityProperties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityRelationships_Entities", "EntityRelationships")]
        public EntityCollection<EntityRelationship> EntityRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityRelationship>("LightSwitchApplication.FK_EntityRelationships_Entities", "EntityRelationships");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityRelationship>("LightSwitchApplication.FK_EntityRelationships_Entities", "EntityRelationships", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityRelationships_Entities1", "EntityRelationships")]
        public EntityCollection<EntityRelationship> EntityRelationships1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityRelationship>("LightSwitchApplication.FK_EntityRelationships_Entities1", "EntityRelationships");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityRelationship>("LightSwitchApplication.FK_EntityRelationships_Entities1", "EntityRelationships", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EntityParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntityParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntityParameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="entityPropertyId">Initial value of the EntityPropertyId property.</param>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        public static EntityParameter CreateEntityParameter(global::System.Int32 id, global::System.Int32 entityPropertyId, global::System.Int32 parameterId)
        {
            EntityParameter entityParameter = new EntityParameter();
            entityParameter.Id = id;
            entityParameter.EntityPropertyId = entityPropertyId;
            entityParameter.ParameterId = parameterId;
            return entityParameter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityPropertyId
        {
            get
            {
                return _EntityPropertyId;
            }
            set
            {
                OnEntityPropertyIdChanging(value);
                ReportPropertyChanging("EntityPropertyId");
                _EntityPropertyId = value;
                ReportPropertyChanged("EntityPropertyId");
                OnEntityPropertyIdChanged();
            }
        }
        private global::System.Int32 _EntityPropertyId;
        partial void OnEntityPropertyIdChanging(global::System.Int32 value);
        partial void OnEntityPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                OnParameterIdChanging(value);
                ReportPropertyChanging("ParameterId");
                _ParameterId = value;
                ReportPropertyChanged("ParameterId");
                OnParameterIdChanged();
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityParameters_EntityProperties", "EntityProperties")]
        public EntityProperty EntityProperty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityProperty>("LightSwitchApplication.FK_EntityParameters_EntityProperties", "EntityProperties").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityProperty>("LightSwitchApplication.FK_EntityParameters_EntityProperties", "EntityProperties").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntityProperty> EntityPropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityProperty>("LightSwitchApplication.FK_EntityParameters_EntityProperties", "EntityProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntityProperty>("LightSwitchApplication.FK_EntityParameters_EntityProperties", "EntityProperties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityParameters_Parameters", "Parameters")]
        public Parameter Parameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_EntityParameters_Parameters", "Parameters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_EntityParameters_Parameters", "Parameters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> ParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_EntityParameters_Parameters", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("LightSwitchApplication.FK_EntityParameters_Parameters", "Parameters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EntityProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntityProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntityProperty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="modelTypeId">Initial value of the ModelTypeId property.</param>
        /// <param name="dataTypeId">Initial value of the DataTypeId property.</param>
        /// <param name="entityId">Initial value of the EntityId property.</param>
        public static EntityProperty CreateEntityProperty(global::System.Int32 id, global::System.String propertyName, global::System.Int32 modelTypeId, global::System.Int32 dataTypeId, global::System.Int32 entityId)
        {
            EntityProperty entityProperty = new EntityProperty();
            entityProperty.Id = id;
            entityProperty.PropertyName = propertyName;
            entityProperty.ModelTypeId = modelTypeId;
            entityProperty.DataTypeId = dataTypeId;
            entityProperty.EntityId = entityId;
            return entityProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = value;
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelTypeId
        {
            get
            {
                return _ModelTypeId;
            }
            set
            {
                OnModelTypeIdChanging(value);
                ReportPropertyChanging("ModelTypeId");
                _ModelTypeId = value;
                ReportPropertyChanged("ModelTypeId");
                OnModelTypeIdChanged();
            }
        }
        private global::System.Int32 _ModelTypeId;
        partial void OnModelTypeIdChanging(global::System.Int32 value);
        partial void OnModelTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataTypeId
        {
            get
            {
                return _DataTypeId;
            }
            set
            {
                OnDataTypeIdChanging(value);
                ReportPropertyChanging("DataTypeId");
                _DataTypeId = value;
                ReportPropertyChanged("DataTypeId");
                OnDataTypeIdChanged();
            }
        }
        private global::System.Int32 _DataTypeId;
        partial void OnDataTypeIdChanging(global::System.Int32 value);
        partial void OnDataTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityId
        {
            get
            {
                return _EntityId;
            }
            set
            {
                OnEntityIdChanging(value);
                ReportPropertyChanging("EntityId");
                _EntityId = value;
                ReportPropertyChanged("EntityId");
                OnEntityIdChanged();
            }
        }
        private global::System.Int32 _EntityId;
        partial void OnEntityIdChanging(global::System.Int32 value);
        partial void OnEntityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CalculatedProperties_EntityProperties", "CalculatedProperties")]
        public CalculatedProperty CalculatedProperty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculatedProperty>("LightSwitchApplication.FK_CalculatedProperties_EntityProperties", "CalculatedProperties").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculatedProperty>("LightSwitchApplication.FK_CalculatedProperties_EntityProperties", "CalculatedProperties").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalculatedProperty> CalculatedPropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalculatedProperty>("LightSwitchApplication.FK_CalculatedProperties_EntityProperties", "CalculatedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalculatedProperty>("LightSwitchApplication.FK_CalculatedProperties_EntityProperties", "CalculatedProperties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityParameters_EntityProperties", "EntityParameters")]
        public EntityCollection<EntityParameter> EntityParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityParameter>("LightSwitchApplication.FK_EntityParameters_EntityProperties", "EntityParameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityParameter>("LightSwitchApplication.FK_EntityParameters_EntityProperties", "EntityParameters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityProperties_DataTypes", "DataTypes")]
        public DataType DataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("LightSwitchApplication.FK_EntityProperties_DataTypes", "DataTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("LightSwitchApplication.FK_EntityProperties_DataTypes", "DataTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataType> DataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("LightSwitchApplication.FK_EntityProperties_DataTypes", "DataTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataType>("LightSwitchApplication.FK_EntityProperties_DataTypes", "DataTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityProperties_Entities", "Entities")]
        public Entity Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityProperties_Entities", "Entities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityProperties_Entities", "Entities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityProperties_Entities", "Entities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("LightSwitchApplication.FK_EntityProperties_Entities", "Entities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EntityRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntityRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntityRelationship object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isMultiple">Initial value of the IsMultiple property.</param>
        /// <param name="childEntityId">Initial value of the ChildEntityId property.</param>
        /// <param name="parentEntityId">Initial value of the ParentEntityId property.</param>
        public static EntityRelationship CreateEntityRelationship(global::System.Int32 id, global::System.Boolean isMultiple, global::System.Int32 childEntityId, global::System.Int32 parentEntityId)
        {
            EntityRelationship entityRelationship = new EntityRelationship();
            entityRelationship.Id = id;
            entityRelationship.IsMultiple = isMultiple;
            entityRelationship.ChildEntityId = childEntityId;
            entityRelationship.ParentEntityId = parentEntityId;
            return entityRelationship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMultiple
        {
            get
            {
                return _IsMultiple;
            }
            set
            {
                OnIsMultipleChanging(value);
                ReportPropertyChanging("IsMultiple");
                _IsMultiple = value;
                ReportPropertyChanged("IsMultiple");
                OnIsMultipleChanged();
            }
        }
        private global::System.Boolean _IsMultiple;
        partial void OnIsMultipleChanging(global::System.Boolean value);
        partial void OnIsMultipleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChildEntityId
        {
            get
            {
                return _ChildEntityId;
            }
            set
            {
                OnChildEntityIdChanging(value);
                ReportPropertyChanging("ChildEntityId");
                _ChildEntityId = value;
                ReportPropertyChanged("ChildEntityId");
                OnChildEntityIdChanged();
            }
        }
        private global::System.Int32 _ChildEntityId;
        partial void OnChildEntityIdChanging(global::System.Int32 value);
        partial void OnChildEntityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentEntityId
        {
            get
            {
                return _ParentEntityId;
            }
            set
            {
                OnParentEntityIdChanging(value);
                ReportPropertyChanging("ParentEntityId");
                _ParentEntityId = value;
                ReportPropertyChanged("ParentEntityId");
                OnParentEntityIdChanged();
            }
        }
        private global::System.Int32 _ParentEntityId;
        partial void OnParentEntityIdChanging(global::System.Int32 value);
        partial void OnParentEntityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityRelationships_Entities", "Entities")]
        public Entity Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityRelationships_Entities", "Entities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityRelationships_Entities", "Entities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityRelationships_Entities", "Entities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("LightSwitchApplication.FK_EntityRelationships_Entities", "Entities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityRelationships_Entities1", "Entities")]
        public Entity Entity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityRelationships_Entities1", "Entities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityRelationships_Entities1", "Entities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> Entity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("LightSwitchApplication.FK_EntityRelationships_Entities1", "Entities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("LightSwitchApplication.FK_EntityRelationships_Entities1", "Entities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="FunctionOperation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FunctionOperation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FunctionOperation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="functionId">Initial value of the FunctionId property.</param>
        /// <param name="operatorId">Initial value of the OperatorId property.</param>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        public static FunctionOperation CreateFunctionOperation(global::System.Int32 id, global::System.Int32 functionId, global::System.Int32 operatorId, global::System.Int32 parameterId)
        {
            FunctionOperation functionOperation = new FunctionOperation();
            functionOperation.Id = id;
            functionOperation.FunctionId = functionId;
            functionOperation.OperatorId = operatorId;
            functionOperation.ParameterId = parameterId;
            return functionOperation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FunctionId
        {
            get
            {
                return _FunctionId;
            }
            set
            {
                OnFunctionIdChanging(value);
                ReportPropertyChanging("FunctionId");
                _FunctionId = value;
                ReportPropertyChanged("FunctionId");
                OnFunctionIdChanged();
            }
        }
        private global::System.Int32 _FunctionId;
        partial void OnFunctionIdChanging(global::System.Int32 value);
        partial void OnFunctionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperatorId
        {
            get
            {
                return _OperatorId;
            }
            set
            {
                OnOperatorIdChanging(value);
                ReportPropertyChanging("OperatorId");
                _OperatorId = value;
                ReportPropertyChanged("OperatorId");
                OnOperatorIdChanged();
            }
        }
        private global::System.Int32 _OperatorId;
        partial void OnOperatorIdChanging(global::System.Int32 value);
        partial void OnOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                OnParameterIdChanging(value);
                ReportPropertyChanging("ParameterId");
                _ParameterId = value;
                ReportPropertyChanged("ParameterId");
                OnParameterIdChanged();
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionOperations_Functions", "Functions")]
        public c_Function c_Function
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_FunctionOperations_Functions", "Functions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_FunctionOperations_Functions", "Functions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<c_Function> c_FunctionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_FunctionOperations_Functions", "Functions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<c_Function>("LightSwitchApplication.FK_FunctionOperations_Functions", "Functions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionOperations_Operators", "Operators")]
        public c_Operator c_Operator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Operator>("LightSwitchApplication.FK_FunctionOperations_Operators", "Operators").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Operator>("LightSwitchApplication.FK_FunctionOperations_Operators", "Operators").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<c_Operator> c_OperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Operator>("LightSwitchApplication.FK_FunctionOperations_Operators", "Operators");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<c_Operator>("LightSwitchApplication.FK_FunctionOperations_Operators", "Operators", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionOperations_Parameters", "Parameters")]
        public Parameter Parameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_FunctionOperations_Parameters", "Parameters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_FunctionOperations_Parameters", "Parameters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> ParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_FunctionOperations_Parameters", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("LightSwitchApplication.FK_FunctionOperations_Parameters", "Parameters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="FunctionParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FunctionParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FunctionParameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="functionId">Initial value of the FunctionId property.</param>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        public static FunctionParameter CreateFunctionParameter(global::System.Int32 id, global::System.Int32 functionId, global::System.Int32 parameterId)
        {
            FunctionParameter functionParameter = new FunctionParameter();
            functionParameter.Id = id;
            functionParameter.FunctionId = functionId;
            functionParameter.ParameterId = parameterId;
            return functionParameter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FunctionId
        {
            get
            {
                return _FunctionId;
            }
            set
            {
                OnFunctionIdChanging(value);
                ReportPropertyChanging("FunctionId");
                _FunctionId = value;
                ReportPropertyChanged("FunctionId");
                OnFunctionIdChanged();
            }
        }
        private global::System.Int32 _FunctionId;
        partial void OnFunctionIdChanging(global::System.Int32 value);
        partial void OnFunctionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                OnParameterIdChanging(value);
                ReportPropertyChanging("ParameterId");
                _ParameterId = value;
                ReportPropertyChanged("ParameterId");
                OnParameterIdChanged();
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionParameters_Functions", "Functions")]
        public c_Function c_Function
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_FunctionParameters_Functions", "Functions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_FunctionParameters_Functions", "Functions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<c_Function> c_FunctionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<c_Function>("LightSwitchApplication.FK_FunctionParameters_Functions", "Functions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<c_Function>("LightSwitchApplication.FK_FunctionParameters_Functions", "Functions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionParameters_Parameters", "Parameters")]
        public Parameter Parameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_FunctionParameters_Parameters", "Parameters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_FunctionParameters_Parameters", "Parameters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> ParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("LightSwitchApplication.FK_FunctionParameters_Parameters", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("LightSwitchApplication.FK_FunctionParameters_Parameters", "Parameters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="FunctionSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FunctionSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FunctionSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FunctionSet CreateFunctionSet(global::System.Int32 id)
        {
            FunctionSet functionSet = new FunctionSet();
            functionSet.Id = id;
            return functionSet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ModelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModelType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ModelType CreateModelType(global::System.Int32 id, global::System.String name)
        {
            ModelType modelType = new ModelType();
            modelType.Id = id;
            modelType.Name = name;
            return modelType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dataTypeId">Initial value of the DataTypeId property.</param>
        public static Parameter CreateParameter(global::System.Int32 id, global::System.String name, global::System.Int32 dataTypeId)
        {
            Parameter parameter = new Parameter();
            parameter.Id = id;
            parameter.Name = name;
            parameter.DataTypeId = dataTypeId;
            return parameter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataTypeId
        {
            get
            {
                return _DataTypeId;
            }
            set
            {
                OnDataTypeIdChanging(value);
                ReportPropertyChanging("DataTypeId");
                _DataTypeId = value;
                ReportPropertyChanged("DataTypeId");
                OnDataTypeIdChanged();
            }
        }
        private global::System.Int32 _DataTypeId;
        partial void OnDataTypeIdChanging(global::System.Int32 value);
        partial void OnDataTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EntityParameters_Parameters", "EntityParameters")]
        public EntityCollection<EntityParameter> EntityParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntityParameter>("LightSwitchApplication.FK_EntityParameters_Parameters", "EntityParameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntityParameter>("LightSwitchApplication.FK_EntityParameters_Parameters", "EntityParameters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionOperations_Parameters", "FunctionOperations")]
        public EntityCollection<FunctionOperation> FunctionOperations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FunctionOperation>("LightSwitchApplication.FK_FunctionOperations_Parameters", "FunctionOperations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FunctionOperation>("LightSwitchApplication.FK_FunctionOperations_Parameters", "FunctionOperations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_FunctionParameters_Parameters", "FunctionParameters")]
        public EntityCollection<FunctionParameter> FunctionParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FunctionParameter>("LightSwitchApplication.FK_FunctionParameters_Parameters", "FunctionParameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FunctionParameter>("LightSwitchApplication.FK_FunctionParameters_Parameters", "FunctionParameters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Parameters_DataTypes", "DataTypes")]
        public DataType DataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("LightSwitchApplication.FK_Parameters_DataTypes", "DataTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("LightSwitchApplication.FK_Parameters_DataTypes", "DataTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataType> DataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("LightSwitchApplication.FK_Parameters_DataTypes", "DataTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataType>("LightSwitchApplication.FK_Parameters_DataTypes", "DataTypes", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
