<#@ include file="T4Toolbox.tt" #>
<#@ assembly name="C:\Prism\GitRepositiory\GenSoft\Revolution\Amoeba\T4 Templates\bin\x86\Debug\T4Entities.dll" #>
<#@ import namespace="T4Entities" #>
<#@ assembly name="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" #>
<#@ assembly name="C:\Prism\GitRepositiory\GenSoft\Revolution\Amoeba\Amoeba\Amoeba\packages\morelinq.1.4.0\lib\net35\MoreLinq.dll" #>
<#@ import namespace="System.Linq" #>
<#+
// <copyright file="EFEntityTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class EntityViewInterfaceTemplate : CSharpTemplate
{
	public EntityViewInterfaceTemplate(EntityView entityView,string appName)
	{
	    EntityView = entityView;
	    AppName = appName;
	}

    public EntityView EntityView { get;}
    public string AppName { get; set; }

    public override string TransformText()
	{
		base.TransformText();
#>
using System;
using System.Collections.Generic;
using SystemInterfaces;
using System.ComponentModel.Composition;
using <#=AppName#>.Interfaces;

namespace <#=AppName#>.Interfaces
{
	
	public partial interface I<#= EntityView.Name #>:IEntityView<I<#= EntityView.Entity.Name #>>
	{
<#+
	foreach (var prop in EntityView.EntityViewProperties)
	{

		var isPropNull = prop.EntityProperty == null
						? prop.EntityViewViewProperty == null
						: prop.EntityProperty == null;

		if(isPropNull == true) continue;	

	    var dataType = prop.EntityProperty == null
	        ? prop.EntityViewViewProperty.EntityProperty.DataProperties.First().DataType.Name
	        : prop.EntityProperty.DataProperties.First().DataType.Name;
	    var funcDataType = prop.EntityViewPropertyFunctions.Any() && prop.EntityViewPropertyFunctions.All(x => x.Function.ReturnDataType != null)
							? prop.EntityViewPropertyFunctions.Last().Function.ReturnDataType.DataType.Name
							: dataType;
#>
		<#=funcDataType #><#=funcDataType != "string"?"?":"" #> <#= prop.Name #> { get;}
<#+ }
#>



	}
}
<#+
		return this.GenerationEnvironment.ToString();
	}
}
#>
