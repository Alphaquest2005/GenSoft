// <autogenerated>
//   This file was generated by T4 code generator MRManger-DataEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using GenSoft.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace GenSoft.Mappings
{
	public class xcuda_ValuationMap
	{
		public static void Map(EntityTypeBuilder<Entities.xcuda_Valuation> entityBuilder)
		{
			entityBuilder.ToTable("xcuda_Valuation", "dbo");
			entityBuilder.HasKey(t => t.ASYCUDA_Id);
			entityBuilder.Property(t => t.ASYCUDA_Id).HasColumnName("ASYCUDA_Id").ValueGeneratedNever();	
			entityBuilder.Property(t => t.ASYCUDA_Id).HasColumnName("ASYCUDA_Id").IsRequired();
			entityBuilder.Property(t => t.Calculation_working_mode).HasColumnName("Calculation_working_mode").IsRequired().HasMaxLength(Int32.MaxValue);
			entityBuilder.Property(t => t.Total_CIF).HasColumnName("Total_CIF").IsRequired();
			entityBuilder.Property(t => t.Total_cost).HasColumnName("Total_cost").IsRequired();
		//-------------------Navigation Properties -------------------------------//
				entityBuilder.HasOne(p => p.xcuda_Gs_deduction).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_Gs_deduction>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Gs_external_freight).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_Gs_external_freight>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Gs_insurance).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_Gs_insurance>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Gs_internal_freight).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_Gs_internal_freight>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Gs_Invoice).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_Gs_Invoice>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Gs_other_cost).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_Gs_other_cost>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Total).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_Total>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Weight).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_Weight>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
	
				//----------------Parent Properties
				//entityBuilder.HasOne(p => p.xcuda_ASYCUDA xcuda_ASYCUDA).WithOne(p => p.xcuda_Valuation).HasForeignKey<xcuda_ASYCUDA>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
	
		}
	}
}
