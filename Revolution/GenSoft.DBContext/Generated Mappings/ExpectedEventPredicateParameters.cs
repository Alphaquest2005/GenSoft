// <autogenerated>
//   This file was generated by T4 code generator MRManger-DataEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using GenSoft.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace GenSoft.Mappings
{
	public class ExpectedEventPredicateParametersMap
	{
		public static void Map(EntityTypeBuilder<Entities.ExpectedEventPredicateParameters> entityBuilder)
		{
			entityBuilder.ToTable("ExpectedEventPredicateParameters", "dbo");
			entityBuilder.HasKey(t => t.Id);
			entityBuilder.Property(t => t.Id).HasColumnName("Id").UseSqlServerIdentityColumn();	
			entityBuilder.Property(t => t.EventPredicateId).HasColumnName("EventPredicateId").IsRequired();
			entityBuilder.Property(t => t.ExpectedEventId).HasColumnName("ExpectedEventId").IsRequired();
			entityBuilder.Property(t => t.PredicateParameterId).HasColumnName("PredicateParameterId").IsRequired();
		//-------------------Navigation Properties -------------------------------//
				entityBuilder.HasOne(p => p.ExpectedEventConstants).WithOne(p => p.ExpectedEventPredicateParameters).HasForeignKey<ExpectedEventConstants>(c => c.Id).OnDelete(DeleteBehavior.Restrict);
	
				//----------------Parent Properties
				//entityBuilder.HasOne(p => p.EventPredicates EventPredicates).WithMany(p => p.ExpectedEventPredicateParameters).HasForeignKey(c => c.EventPredicateId).OnDelete(DeleteBehavior.Restrict);
				//entityBuilder.HasOne(p => p.ExpectedEvents ExpectedEvents).WithMany(p => p.ExpectedEventPredicateParameters).HasForeignKey(c => c.ExpectedEventId).OnDelete(DeleteBehavior.Restrict);
				//entityBuilder.HasOne(p => p.PredicateParameters PredicateParameters).WithMany(p => p.ExpectedEventPredicateParameters).HasForeignKey(c => c.PredicateParameterId).OnDelete(DeleteBehavior.Restrict);
	
		}
	}
}
