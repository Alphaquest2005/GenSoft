// <autogenerated>
//   This file was generated by T4 code generator MRManger-DataEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using GenSoft.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace GenSoft.Mappings
{
	public class xcuda_ASYCUDAMap
	{
		public static void Map(EntityTypeBuilder<Entities.xcuda_ASYCUDA> entityBuilder)
		{
			entityBuilder.ToTable("xcuda_ASYCUDA", "dbo");
			entityBuilder.HasKey(t => t.ASYCUDA_Id);
			entityBuilder.Property(t => t.ASYCUDA_Id).HasColumnName("ASYCUDA_Id").UseSqlServerIdentityColumn();	
			entityBuilder.Property(t => t.id).HasColumnName("id").IsRequired().HasMaxLength(Int32.MaxValue);
		//-------------------Navigation Properties -------------------------------//
				entityBuilder.HasMany(x => x.AsycudaDocumentEntryData).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.AsycudaDocumentId).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Assessment_notice).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_ASYCUDA_ExtendedProperties).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey<xcuda_ASYCUDA_ExtendedProperties>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Traders).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey<xcuda_Traders>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Transit).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Transport).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Financial).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Item).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_General_information).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey<xcuda_General_information>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Global_taxes).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Container).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Declarant).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey<xcuda_Declarant>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Export_release).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Valuation).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey<xcuda_Valuation>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Warehouse).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_PreviousItem).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Property).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey<xcuda_Property>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.xcuda_Suppliers_documents).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Identification).WithOne(p => p.xcuda_ASYCUDA).HasForeignKey<xcuda_Identification>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
	
				//----------------Parent Properties
	
		}
	}
}
