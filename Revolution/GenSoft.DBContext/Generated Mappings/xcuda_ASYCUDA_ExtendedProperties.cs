// <autogenerated>
//   This file was generated by T4 code generator MRManger-DataEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using GenSoft.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace GenSoft.Mappings
{
	public class xcuda_ASYCUDA_ExtendedPropertiesMap
	{
		public static void Map(EntityTypeBuilder<Entities.xcuda_ASYCUDA_ExtendedProperties> entityBuilder)
		{
			entityBuilder.ToTable("xcuda_ASYCUDA_ExtendedProperties", "dbo");
			entityBuilder.HasKey(t => t.ASYCUDA_Id);
			entityBuilder.Property(t => t.ASYCUDA_Id).HasColumnName("ASYCUDA_Id").ValueGeneratedNever();	
			entityBuilder.Property(t => t.AsycudaDocumentSetId).HasColumnName("AsycudaDocumentSetId").IsRequired();
			entityBuilder.Property(t => t.ASYCUDA_Id).HasColumnName("ASYCUDA_Id").IsRequired();
			entityBuilder.Property(t => t.Customs_ProcedureId).HasColumnName("Customs_ProcedureId").IsRequired();
			entityBuilder.Property(t => t.Description).HasColumnName("Description").IsRequired().HasMaxLength(255);
			entityBuilder.Property(t => t.Document_TypeId).HasColumnName("Document_TypeId").IsRequired();
			entityBuilder.Property(t => t.DocumentLines).HasColumnName("DocumentLines").IsRequired();
			entityBuilder.Property(t => t.ImportComplete).HasColumnName("ImportComplete").IsRequired();
			entityBuilder.Property(t => t.ReferenceNumber).HasColumnName("ReferenceNumber").IsRequired().HasMaxLength(50);
		//-------------------Navigation Properties -------------------------------//
				entityBuilder.HasOne(p => p.DocumentManifesto).WithOne(p => p.xcuda_ASYCUDA_ExtendedProperties).HasForeignKey<DocumentManifesto>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.DocumentProperties).WithOne(p => p.xcuda_ASYCUDA_ExtendedProperties).HasForeignKey<DocumentProperties>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
	
				//----------------Parent Properties
				//entityBuilder.HasOne(p => p.AsycudaDocumentSet AsycudaDocumentSet).WithMany(p => p.xcuda_ASYCUDA_ExtendedProperties).HasForeignKey(c => c.AsycudaDocumentSetId).OnDelete(DeleteBehavior.Restrict);
				//entityBuilder.HasOne(p => p.xcuda_ASYCUDA xcuda_ASYCUDA).WithOne(p => p.xcuda_ASYCUDA_ExtendedProperties).HasForeignKey<xcuda_ASYCUDA>(c => c.ASYCUDA_Id).OnDelete(DeleteBehavior.Restrict);
				//entityBuilder.HasOne(p => p.Customs_Procedure Customs_Procedure).WithMany(p => p.xcuda_ASYCUDA_ExtendedProperties).HasForeignKey(c => c.Customs_ProcedureId).OnDelete(DeleteBehavior.Restrict);
				//entityBuilder.HasOne(p => p.Document_Type Document_Type).WithMany(p => p.xcuda_ASYCUDA_ExtendedProperties).HasForeignKey(c => c.Document_TypeId).OnDelete(DeleteBehavior.Restrict);
	
		}
	}
}
