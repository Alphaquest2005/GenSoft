// <autogenerated>
//   This file was generated by T4 code generator MRManger-DataEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using GenSoft.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace GenSoft.Mappings
{
	public class xcuda_CountryMap
	{
		public static void Map(EntityTypeBuilder<Entities.xcuda_Country> entityBuilder)
		{
			entityBuilder.ToTable("xcuda_Country", "dbo");
			entityBuilder.HasKey(t => t.Country_Id);
			entityBuilder.Property(t => t.Country_Id).HasColumnName("Country_Id").ValueGeneratedNever();	
			entityBuilder.Property(t => t.Country_first_destination).HasColumnName("Country_first_destination").IsRequired().HasMaxLength(Int32.MaxValue);
			entityBuilder.Property(t => t.Country_Id).HasColumnName("Country_Id").IsRequired();
			entityBuilder.Property(t => t.Country_of_origin_name).HasColumnName("Country_of_origin_name").IsRequired().HasMaxLength(Int32.MaxValue);
			entityBuilder.Property(t => t.Country_of_origin_name).HasColumnName("Country_of_origin_name").IsRequired().HasMaxLength(Int32.MaxValue);
			entityBuilder.Property(t => t.Place_of_loading_Id).HasColumnName("Place_of_loading_Id").IsRequired();
			entityBuilder.Property(t => t.Trading_country).HasColumnName("Trading_country").IsRequired().HasMaxLength(50);
		//-------------------Navigation Properties -------------------------------//
				entityBuilder.HasOne(p => p.xcuda_Destination).WithOne(p => p.xcuda_Country).HasForeignKey<xcuda_Destination>(c => c.Country_Id).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasOne(p => p.xcuda_Export).WithOne(p => p.xcuda_Country).HasForeignKey<xcuda_Export>(c => c.Country_Id).OnDelete(DeleteBehavior.Restrict);
	
				//----------------Parent Properties
				//entityBuilder.HasOne(p => p.xcuda_General_information xcuda_General_information).WithOne(p => p.xcuda_Country).HasForeignKey<xcuda_General_information>(c => c.Country_Id).OnDelete(DeleteBehavior.Restrict);
	
		}
	}
}
